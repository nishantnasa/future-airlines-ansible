---
extra_tags:
  - EniToUse: "{{ aws_accounts_new.qlstg.amadeus_vpn_eni_to_use }}"

sec_group_instance_rules:
  - proto: tcp
    from_port: 32768
    to_port: 60999
    cidr_ip: 0.0.0.0/0
    rule_desc: "Allow traffic to ECS dynamic port range from anywhere"

#  "{{ [
#        {'proto':'tcp', 'from_port': 32768, 'to_port': 60999, 'cidrs': [
#          [vpc_fact_cidr_block],
#          old_dev_vpc_protected_subnet_fact.subnets | map(attribute='cidr_block') | list,
#          old_sit_vpc_protected_subnet_fact.subnets | map(attribute='cidr_block') | list,
#          old_vpc_protected_subnet_fact.subnets | map(attribute='cidr_block') | list,
#          lsl_dev_vpc_protected_subnet_fact.subnets | map(attribute='cidr_block') | list,
#          lsl_sit_vpc_protected_subnet_fact.subnets | map(attribute='cidr_block') | list,
#          lsl_vpc_protected_subnet_fact.subnets | map(attribute='cidr_block') | list,
#          qbr_dev_vpc_protected_subnet_fact.subnets | map(attribute='cidr_block') | list,
#          qbr_sit_vpc_protected_subnet_fact.subnets | map(attribute='cidr_block') | list,
#          qbr_vpc_protected_subnet_fact.subnets | map(attribute='cidr_block') | list,
#        ]}
#      ] | sec_group_helper
#  }}"

user_data: |
  #!/bin/bash

  echo "ECS_CLUSTER=cluster-{{ channel }}-{{ env }}-{{ deploy_in_subnet }}-{{ cluster_id }}" >> /etc/ecs/ecs.config
  echo "ECS_AVAILABLE_LOGGING_DRIVERS=[\"splunk\",\"syslog\",\"fluentd\",\"json-file\"]" >> /etc/ecs/ecs.config
  echo "ECS_ENABLE_CONTAINER_METADATA=true" >> /etc/ecs/ecs.config

  export PATH=$PATH:/usr/local/bin
  export AWS_DEFAULT_REGION="ap-southeast-2"

  # Get the current instance id
  instance_id=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)

  # Get the instance tags
  describe_tags_result=$(aws ec2 describe-tags --filters "Name=resource-id,Values=${instance_id}")

  # Get values of specific tags
  ecs_cluster_name=$(echo ${describe_tags_result} | jq -r '.Tags[] | select(.Key == "EcsClusterName") | .Value')
  ENV=$(echo ${describe_tags_result} | jq -r '.Tags[] | select(.Key == "Env") | .Value')
  eni_to_use=$(echo ${describe_tags_result} | jq -r '.Tags[] | select(.Key == "EniToUse") | .Value')

  # Since we know the values of the eni's we can use the tag to decide what to do.
  if [ "$eni_to_use" == "{{ aws_accounts_new.qlstg.amadeus_vpn_eni_to_use }}" ]; then
    # add a route for the ENI and ASAv
    ip route add 193.23.185.128/29 via 10.213.36.200 dev eth1
  fi
