---
asg_desired_size: 1
asg_min_size: 1
data_volume_size: 2000
sec_group_instance_rules:
  - proto: tcp
    from_port: 32768
    to_port: 60999
    cidr_ip: "{{ vpc_fact.vpcs.0.cidr_block }}"
    rule_desc: "Allow traffic to ECS dynamic port range from {{ channel }} VPC"

user_data: |
  #!/bin/bash

  echo "ECS_CLUSTER=cluster-{{ channel }}-{{ env }}-{{ deploy_in_subnet }}-{{ cluster_id }}" >> /etc/ecs/ecs.config
  echo "ECS_AVAILABLE_LOGGING_DRIVERS=[\"splunk\",\"syslog\",\"fluentd\",\"json-file\"]" >> /etc/ecs/ecs.config
  echo "ECS_ENABLE_CONTAINER_METADATA=true" >> /etc/ecs/ecs.config

  export PATH=$PATH:/usr/local/bin
  export AWS_DEFAULT_REGION="ap-southeast-2"

  # Get the current instance id
  instance_id=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)

  # Get the instance tags
  describe_tags_result=$(aws ec2 describe-tags --filters "Name=resource-id,Values=${instance_id}")

  # Get values of specific tags
  ecs_cluster_name=$(echo ${describe_tags_result} | jq -r '.Tags[] | select(.Key == "EcsClusterName") | .Value')
  ENV=$(echo ${describe_tags_result} | jq -r '.Tags[] | select(.Key == "Env") | .Value')

  changed=false
  container_space="200G"

  # AWS ECS AMI attaches a second EBS volume under /dev/xvdcz for docker think pool.
  # The default partition size is set to 22G, so in order for docker to be able
  # to use the additional space, the volume partition and docker thin pool logical
  # volume needs to be re-sized with the additional space from the EBS volume
  # References:
  # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-ami-storage-config.html
  # https://www.tecmint.com/extend-and-reduce-lvms-in-linux/
  # https://aws.amazon.com/premiumsupport/knowledge-center/increase-default-ecs-docker-limit/

  # Resize /dev/xvdcz partition 1 with all available space in the volume
  growpart /dev/xvdcz 1

  # Resize physical volume used by the 'docker' volume group with all available space
  pvresize `pvs --noheadings | awk '{print $1}'`

  # Resize docker logical volume /dev/docker/docker-pool with all available space
  lvextend -l 100%FREE /dev/docker/docker-pool

  # Allow container to have larger disk space
  if grep -q "dm.basesize" /etc/sysconfig/docker
  then
      echo "Skip this docker setting as it's already configured"
  else
      echo 'OPTIONS="${OPTIONS} --storage-opt dm.basesize=${container_space}"' >> /etc/sysconfig/docker
      changed=true
  fi

  # Configure host to clean up stopped containers and their volumes on a regular basis
  # Otherwise docker daemon and ecs agent will stop when host disk space is full
  if grep -q "ECS_ENGINE_TASK_CLEANUP_WAIT_DURATION" /etc/ecs/ecs.config
  then
      echo "Skip this ecs agent option as it's already configured"
  else
      echo "ECS_ENGINE_TASK_CLEANUP_WAIT_DURATION=1m" >> /etc/ecs/ecs.config
      changed=true
  fi

  # need to restart docker and ecs agent for this change to take effect
  if [ "$changed" = true  ]; then
      service docker restart
      start ecs
  fi
